注意到子树外的修改不会让子树内的叶子到根的路径异或和从不同变成相同。

先考虑暴力 dp，即维护 $f_{x,y}$ 表示只操作子树 $x$ 内的点，使得每个叶子到根的路径权值都为 $y$ 的最小操作次数。

发现对于同一个 $x$，$f_x$ 只会有两种不同的取值，因为对于 $f_{x,y}$，我们可以把 $a_x$ 的值异或上 $y \oplus z$，从而用 $1$ 的代价转移到 $f_{x,z}$。

于是我们维护 $f_x$ 的最小值，以及取到最小值的集合即可。

对于转移，其实就是找到在所有儿子中，在集合中出现的最多次数，以及出现最多的数。

于是可以用启发式合并维护 map。如果存在一个数出现至少两次，则暴力合并，因为集合的大小至少会减半，所以根据势能复杂度正确，否则直接启发式合并并不做操作即可。由启发式合并可知复杂度正确。
