###  题目描述 

有一张 $n$ 个顶点 $m$ 条边的无向图 $G$，其中每条边有一个边权 $w_i$。记 $G \left[ l, r \right]$ 表示只保留 $G$ 中边权在 $\left[ l, r \right]$ 之间的边所得的图。 

对于一张无向图 $G$，设 $w \left( G \right)$ 为 $G$ 最小生成森林的边权和。 

(ps: 这里 _最小生成森林_ 要求连通分量数量和 $G$ 的相同，即每个连通分量的最小生成树的并) 

有 $q$ 组询问，每次给出 $l_i, r_i$，求 $w \left( G \left[ l_i, r_i \right] \right)$ 的值，强制在线。 

###  题解 

对于一张固定的图 $G$，$w \left( G \right)$ 就是 $G$ 的最小生成森林的边权和，具体地，我们利用 Kruskal 算法，将 $G$ 中所有边按照权值从小到大排序，然后依次加入边 (如果两端点已连通则不加入)，最后扫描完毕后加入的边的集合就构成了 $G$ 的最小生成森林。 

由于我们将边排序后从小到大加入，因此 $r_i$ 的限制其实不是本质的 —— 即对于 $G \left( \left[ 0, r_i \right] \right)$，它的最小生成森林也是按照原来的顺序依次加入边，只是当扫描到的边权大于 $r_i$ 时直接 ` break ` 即可。 

因此，我们可以得到一个结论： **设 $T_l$ 为图 $G \left[ l, + \infty \right)$ 的最小生成森林，则 $G \left[ l, r \right]$ 的最小生成森林是 $T_l$ 的子图，更具体地，它由 $T_l$ 中所有边权不超过 $r$ 的边构成** 。 

于是，如果我们对每个 $l$ 都维护出了一个数集 $W_l$，表示 $G \left[ l, + \infty \right)$ 的最小生成森林 $T_l$ 的边权的集合，那么一次询问 $\left[ l, r \right]$ 就相当于询问 $W_l$ 中所有不超过 $r$ 的元素之和。 

因此接下来考虑怎么维护 $T_l$，以及 $W_l$。 

按照 $l$ 从大到小的顺序考虑。首先由最小生成树的性质知，如果一条边 $e$ 不在 $G$ 的最小生成树中，则它也不在 $G$ 加入任意新边后的最小生成树中。因此，考虑下一个 $l' < l$ 时，首先加入的边权为 $l'$ 的边 $e = \left( u, v \right)$ 一定在 $T_{l'}$ 中，然后就需要在 $T_l$ 中删除一条边，与 $e$ 合并称为最小生成树。 

具体地址，删除的边需要在 $T_l$ 中 $u \leadsto v$ 的路径上，因此我们就需要查询树的链上最大值，而这棵树又是在不断变化的，因此可以使用 Link-Cut Tree 维护。 

(ps: 本质就是一个只加边的动态最小生成树问题，可以参考 [ 这里 ](../index.html?redirect=378) )。 

而根据上面的分析可知，$W_{l'}$ 相比 $W_l$ 的变化是不大的，至多变化了两个元素 (即删除了一个，增加了一个)，因此可以使用树状数组或线段树记录每种权值是否出现。由于要在线回答询问，因此需要使用 _可持久化线段树_ 来维护。 

(单组数据) 时间复杂度 $O \left( m \log n + q \log m \right)$。 

###  坑 

**坑1：** 由于一共有 $O \left( m \right)$ 种不同的 $l$，因此可持久化线段树要建立 $m$ 个根节点，不要开小了。 

**坑2：** 多组数据记得清空可持久化线段树和动态树。 

###思维难度 : 6.98
###代码难度 : 7.09
###所用知识点 : 动态树;最小生成树;可持久化线段树
